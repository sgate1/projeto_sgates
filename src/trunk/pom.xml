<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>br.una.laboratorio</groupId>
  <artifactId>Sgate</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Sgate Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <aspectj.version>1.6.5.RELEASE</aspectj.version>
    <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
    <org.slf4j.version>1.5.10</org.slf4j.version>
    <junit.version>4.7.0</junit.version>
  </properties>
  
  <repositories>
      
	    <repository>
	      <id>MySql</id>
	      <url>http://mvnrepository.com/artifact/mysql/mysql-connector-java</url>
	    </repository>
	    
	    <repository>
	      <id>com.springsource.repository.bundles.release</id>
	      <name>EBR Spring Release Repository</name>
	      <url>http://repository.springsource.com/maven/bundles/release</url>
	    </repository>
	    
	    <repository>
	      <id>com.springsource.repository.bundles.external</id>
	      <name>EBR External Release Repository</name>
	      <url>http://repository.springsource.com/maven/bundles/external</url>
	    </repository>
	    
	    <repository>
	      <id>com.springsource.repository.bundles.milestone</id>
	      <name>SpringSource Enterprise Bundle Repository - External Bundle Milestones</name>
	      <url>http://maven.springframework.org/milestone</url>
	    </repository>
  
   </repositories>
  
  <pluginRepositories>
      
	<pluginRepository>
		<id>jfrog</id>
		<url>http://repo.jfrog.org/artifactory/plugins-releases/</url>
	</pluginRepository>
	
	<pluginRepository>
		<id>maven plugins</id>
		<url>http://maven-annotation-plugin.googlecode.com/svn/trunk/mavenrepo/</url>
	</pluginRepository>
	
  </pluginRepositories>
  
  <dependencies>
      
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.6</version>
	</dependency>
    
    <dependency>
		<groupId>javax.annotation</groupId>
		<artifactId>com.springsource.javax.annotation</artifactId>
		<version>1.0.0</version>
	</dependency>

    <!-- 
	      Servlet 
    -->
    <dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
	    <version>1.2.0</version>
    </dependency>

    <dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>com.springsource.javax.servlet</artifactId>
	    <version>2.4.0</version>
	    <scope>provided</scope>
    </dependency>

    <!--
	    AspectJ 
     -->
    <dependency>
	    <groupId>org.aspectj</groupId>
	    <artifactId>com.springsource.org.aspectj.runtime</artifactId>
	    <version>${aspectj.version}</version>
    </dependency>

    <dependency>
	    <groupId>org.aspectj</groupId>
	    <artifactId>com.springsource.org.aspectj.tools</artifactId>
	    <version>${aspectj.version}</version>
    </dependency>
    
    <dependency> 
	    <groupId>org.springframework</groupId> 
	    <artifactId>org.springframework.aspects</artifactId> 
	    <version>${org.springframework.version}</version> 
    </dependency>

    <!-- Logging -->
    <dependency>
	      <groupId>org.slf4j</groupId>
	    <artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
	      <version>${org.slf4j.version}</version>
    </dependency>

    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>com.springsource.slf4j.api</artifactId>
	      <version>${org.slf4j.version}</version>
    </dependency>

    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>com.springsource.slf4j.log4j</artifactId>
	      <version>${org.slf4j.version}</version>
    </dependency>

    <dependency>
	      <groupId>org.apache.log4j</groupId>
	      <artifactId>com.springsource.org.apache.log4j</artifactId>
	      <version>1.2.15</version>
	    <exclusions>
		    <exclusion>
			    <groupId>javax.mail</groupId>
			    <artifactId>mail</artifactId>
		    </exclusion>
		    <exclusion>
			    <groupId>javax.jms</groupId>
			    <artifactId>jms</artifactId>
		    </exclusion>
		    <exclusion>
			    <groupId>com.sun.jdmk</groupId>
			    <artifactId>jmxtools</artifactId>
		    </exclusion>
		    <exclusion>
			    <groupId>com.sun.jmx</groupId>
			    <artifactId>jmxri</artifactId>
		    </exclusion>
	    </exclusions>
    </dependency>

    <!--
	      Core utilities used by other modules.
	      Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
    -->
    <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>org.springframework.core</artifactId>
	    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Expression Language (depends on core)
	      Define this if you use Spring Expression APIs (org.springframework.expression.*)
    -->
    <dependency>
	    <groupId>org.springframework</groupId>
     	<artifactId>org.springframework.expression</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Bean Factory and JavaBeans utilities (depends on core)
	      Define this if you use Spring Bean APIs (org.springframework.beans.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.beans</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Aspect Oriented Programming (AOP) Framework (depends on core, beans)
	      Define this if you use Spring AOP APIs (org.springframework.aop.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.aop</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Application Context (depends on core, expression, aop, beans)
	      This is the central artifact for Spring's Dependency Injection Container and is generally always defined
    -->
    <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>org.springframework.context</artifactId>
	    <version>${org.springframework.version}</version>
	    <exclusions>
		    <!-- Exclude Commons Logging in favor of SLF4j -->
		    <exclusion>
			    <groupId>commons-logging</groupId>
			    <artifactId>commons-logging</artifactId>
		    </exclusion>
	    </exclusions>
    </dependency>

    <!--
	      Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
	      Define this if you need any of these integrations
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.context.support</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Transaction Management Abstraction (depends on core, beans, aop, context)
	      Define this if you use Spring Transactions or DAO Exception Hierarchy
	      (org.springframework.transaction.*/org.springframework.dao.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.transaction</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      JDBC Data Access Library (depends on core, beans, context, transaction)
	      Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
    -->
    
    <!--
      <dependency>
		      <groupId>org.springframework</groupId>
		      <artifactId>org.springframework.jdbc</artifactId>
		      <version>${org.springframework.version}</version>
      </dependency>
    -->

    <!--
	      Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
	      (depends on core, beans, context, transaction)
	      Define this if you need ORM (org.springframework.orm.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.orm</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
	      (depends on core, beans, context)
	      Define this if you need OXM (org.springframework.oxm.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.oxm</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Web app development utilities common across Servlet/Portlet environments (depends on core, beans, context)
	      Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.web</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Spring MVC for Servlet Environments (depends on core, beans, context, web)
	      Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.web.servlet</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Spring MVC for Portlet Environments (depends on core, beans, context, web)
	      Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.web.portlet</artifactId>
		    <version>${org.springframework.version}</version>
    </dependency>

    <!--
	      Support for testing Spring applications with tools such as JUnit and TestNG
	      This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
    -->
    <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>org.springframework.test</artifactId>
		    <version>${org.springframework.version}</version>
		    <scope>test</scope>
    </dependency>

    <!--
	      JPA 2 with Hibernate 
     -->
    <dependency>
	    <groupId>org.hibernate.java-persistence</groupId>
	    <artifactId>jpa-api</artifactId>
	    <version>2.0-cr-1</version>
    </dependency>

    <dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-entitymanager</artifactId>
	    <version>3.5.1-Final</version>
    </dependency>

    <dependency>
	    <groupId>org.hibernate</groupId> 
	    <artifactId>hibernate-c3p0</artifactId>
	    <version>3.5.1-Final</version>
    </dependency>

    <dependency>
	    <groupId>org.hibernate</groupId> 
	    <artifactId>hibernate-jpamodelgen</artifactId>
	    <version>1.0.0.Final</version>
    </dependency>

    <!--  
	    JSR 303 with Hibernate Validator 
    -->
    <dependency>
	      <groupId>javax.validation</groupId>
	      <artifactId>com.springsource.javax.validation</artifactId>
	      <version>1.0.0.GA</version>
    </dependency>

    <dependency>
	      <groupId>org.hibernate</groupId>
	      <artifactId>com.springsource.org.hibernate.validator</artifactId>
	      <version>4.0.2.GA</version>
	    <exclusions>
		    <exclusion>
			    <groupId>org.slf4j</groupId>
			    <artifactId>slf4j-api</artifactId>
		    </exclusion>
	    </exclusions>
    </dependency>
    
    <!--
	    XML Parser 
     -->
    <dependency>
	      <groupId>com.thoughtworks.xstream</groupId>
	      <artifactId>com.springsource.com.thoughtworks.xstream</artifactId>
	      <version>1.3.1</version>
    </dependency>

    <!--
	    JSON Parser 
     -->
    <dependency>
	      <groupId>org.codehaus.jackson</groupId>
	      <artifactId>jackson-core-asl</artifactId>
	      <version>1.5.2</version>
    </dependency>

    <dependency>
	      <groupId>org.codehaus.jackson</groupId>
	      <artifactId>jackson-mapper-asl</artifactId>
	      <version>1.5.2</version>
    </dependency>
    
    <!-- 
    **************************************************** 
    Testes unitarios
    **************************************************** 
    -->
    
    <dependency>
      <groupId>org.junit</groupId>
      <artifactId>com.springsource.org.junit</artifactId>
      <version>${junit.version}</version>
    </dependency>
    
  </dependencies>
  
  
  <build>
    
    <finalName>Sgate</finalName>
    
    <plugins>
      <plugin>
    	<artifactId>maven-compiler-plugin</artifactId>
        <configuration>
					<encoding>UTF-8</encoding>
					<source>1.5</source>
					<target>1.5</target>
					<compilerArgument>-proc:none</compilerArgument>
		</configuration>
      </plugin>
	     
	  <plugin>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>aspectj-maven-plugin</artifactId>
		    <version>1.3</version>
		    <executions>
		        <execution>
		            <goals>
		                <goal>compile</goal>
		                <goal>test-compile</goal>
		            </goals>
		        </execution>
		    </executions>
		    <configuration>
		        <source>1.5</source>
		        <target>1.5</target>
		        <aspectLibraries>
		            <aspectLibrary>
		                <groupId>org.springframework</groupId>
		                <artifactId>org.springframework.aspects</artifactId>
		            </aspectLibrary>
		        </aspectLibraries>
		    </configuration>
		</plugin>
		
		<plugin>
			<groupId>org.bsc.maven</groupId>
			<artifactId>maven-processor-plugin</artifactId>
			<version>1.3.5</version>
			<executions>
				<execution>
					<id>process</id>
					<goals>
						<goal>process</goal>
					</goals>
					<phase>generate-sources</phase>
					<configuration>
						<outputDirectory>target/metamodel</outputDirectory>
					</configuration>
				</execution>
			</executions>
			<dependencies>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-jpamodelgen</artifactId>
					<version>1.0.0.Final</version>
				</dependency>
			</dependencies>
		</plugin>
		
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>1.3</version>
			<executions>
				<execution>
					<id>add-source</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>add-source</goal>
					</goals>
					<configuration>
						<sources>
							<source>target/metamodel</source>
						</sources>
					</configuration>
				</execution>
			</executions>
		</plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.0-beta-9</version>
      </plugin>
     
      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-eclipse-plugin</artifactId>
		<version>2.5.1</version>
		<configuration>
			<downloadSources>true</downloadSources>
			<downloadJavadocs>false</downloadJavadocs>
			<wtpversion>2.0</wtpversion>
		</configuration>
      </plugin>
      
    </plugins>
    
  </build>
  
</project>
